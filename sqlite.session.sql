-- CREATE TABLE IF NOT EXISTS Users (
--     id INTEGER PRIMARY KEY AUTOINCREMENT,
--     username TEXT UNIQUE NOT NULL,
--     password TEXT NOT NULL,
--     createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
-- );


-- CREATE TABLE IF NOT EXISTS Todo (
--     id INTEGER PRIMARY KEY AUTOINCREMENT,
--     task TEXT NOT NULL,
--     completed BOOLEAN DEFAULT 0,
--     createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
--     completedAt DATETIME
-- );


-- DELETE FROM Users WHERE id = "2";

DROP TABLE Users;
DROP TABLE Todos;


-- -- Create the Users table
-- CREATE TABLE IF NOT EXISTS Users (
--     id INTEGER PRIMARY KEY AUTOINCREMENT,
--     username TEXT UNIQUE NOT NULL,
--     password TEXT NOT NULL,
--     createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
-- );

-- -- Create the Todo table
-- CREATE TABLE IF NOT EXISTS Todos (
--     id INTEGER PRIMARY KEY AUTOINCREMENT,
--     task TEXT NOT NULL,
--     completed BOOLEAN DEFAULT 0,
--     completedAt DATETIME,
--     createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
--     updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     userId INTEGER NOT NULL,
--     FOREIGN KEY (userId) REFERENCES Users(id)
-- );


 CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `username` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `createdAt` VARCHAR(255), `updatedAt` DATETIME NOT NULL);
 CREATE TABLE IF NOT EXISTS `Todos` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `task` VARCHAR(255) NOT NULL, `completed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME, `completedAt` DATETIME, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE);
